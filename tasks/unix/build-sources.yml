---
- name: Check ccache version
  ansible.builtin.command: "{{ ccache_install_prefix }}/bin/ccache --version"
  changed_when: false
  failed_when: false
  register: ccache_version_cmd

- name: Build ccache from sources
  when: >
    ccache_version_cmd.rc != 0 or
    ccache_version not in ccache_version_cmd.stdout_lines[0]
  block:
    - name: Create a temporary directory to build ccache
      ansible.builtin.tempfile:
        state: directory
      register: ccache_build_dir

    - name: Fetch ccache sources
      ansible.builtin.get_url:
        url: "https://github.com/ccache/ccache/releases/download/v{{ ccache_version }}\
          /ccache-{{ ccache_version }}.tar.gz"
        dest: "{{ ccache_build_dir.path }}"
        mode: "0644"

    - name: Uncompress ccache tarball
      ansible.builtin.unarchive:
        src: "{{ ccache_build_dir.path }}/ccache-{{ ccache_version }}.tar.gz"
        dest: "{{ ccache_build_dir.path }}"
        mode: "0755"
        remote_src: true

    - name: Run configure script
      ansible.builtin.command: "./configure --prefix={{ ccache_install_prefix }}"
      args:
        chdir: "{{ ccache_build_dir.path }}/ccache-{{ ccache_version }}"
      changed_when: false

    - name: Build ccache
      ansible.builtin.command: "make -j{{ ccache_make_jobs }}"
      args:
        chdir: "{{ ccache_build_dir.path }}/ccache-{{ ccache_version }}"
      changed_when: false

    - name: Install ccache
      become: true
      ansible.builtin.command: "make install"
      args:
        chdir: "{{ ccache_build_dir.path }}/ccache-{{ ccache_version }}"
      changed_when: true

  always:
    - name: Clean temporary build directory
      ansible.builtin.file:
        path: "{{ ccache_build_dir.path }}"
        state: absent
