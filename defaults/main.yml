---
# Dictionary of key/value options to write to the ccache.conf file. Note that all values
# should be quoted so that Ansible treats them as strings. With boolean values, this is
# especially problematic because Python will serialize `true` as "True", and ccache values
# are case-sensitive and it will exit with an error when parsing that option. For more
# information, please refer to the ccache manual's "Configuration# settings" section:
# https://ccache.dev/manual/latest.html#_configuration_settings
ccache_config_options: {}

# Group for the ccache_user. By default, this assumes a group with the same name as the
# default user, ansible_user.
ccache_group: "{{ ansible_user }}"

# Where to install ccache when building from sources or installing precompiled binaries
ccache_install_prefix: "/usr/local"

# How to install ccache. Valid options include:
# - build: Build from sources
# - github: Use a precompiled binary from the ccache GitHub releases page (note: not all
#   ccache versions support all platforms. Linux binaries started appearing at release
#   4.6.1, and Mac binaries at release 4.8). For Mac hosts, this requires that you install
#   the `gnu-tar` package from homebrew.
# - package: Use the system's package manager (default)
ccache_install_type: "package"

# Number of simultaneous jobs to use when building from sources (make -jN)
ccache_make_jobs: 4

# List of compiler binary names to symlink (see ccache_symlink_path below)
ccache_symlink_compilers:
  - cc
  - c++
  - gcc
  - g++

# When defined, create symlinks for common compiler names in this directory. Some package
# managers create symlinks in various locations, but source installation (`make install`)
# does do this by default.
# This location needs to be added to the user's PATH ahead of the location containing the
# real compiler binaries.
ccache_symlink_path: ""

# User to configure ccache for
ccache_user: "{{ ansible_user }}"

# Version of ccache to install. Only applies when installing from sources.
ccache_version: "3.7.5"
